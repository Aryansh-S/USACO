#include <iostream>
#include <cstdio>
#include <utility>
#include <algorithm>
using namespace std;

#define f first
#define s second
#define maxn 100000
#define problemname "moop"
typedef pair<int,int> pii;

int n, ids[maxn]; pii pts[maxn];
bool visit[maxn];
bool test(pii a, pii b){
  return (a.f<=b.f&&a.s<=b.s) || (a.f>=b.f&&a.s>=b.s);
}
void dfs(int v, int id){
  if(!visit[v]){
    visit[v]=1; ids[v]=id;
    for(int i=0; i<n; i++) if(test(pts[v],pts[i])) dfs(i,id);
  }
}

int main(){
  cin >> n;
  for(int i=0; i<n; i++) cin >> pts[i].f >> pts[i].s;
  for(int i=0; i<n; i++){
    dfs(i,i);
  }
  sort(ids,ids+n); int ans=1;
  for(int i=1; i<n; i++){
    if(ids[i-1]!=ids[i]) ans++;
  }
  cout << ans << "\n";
  return 0;
}
